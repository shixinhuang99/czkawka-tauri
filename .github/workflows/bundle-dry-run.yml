name: bundle-dry-run

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  bundle:
    runs-on: ${{ matrix.os }}
    name: bundle dry run (${{ matrix.os }})

    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: dtolnay/rust-toolchain@stable

      - name: download ffmpeg and ffprobe (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir ./tauri/ffmpeg
          curl -L -o ffmpeg.zip "https://evermeet.cx/ffmpeg/getrelease/zip"
          unzip ffmpeg.zip -d ./tauri/ffmpeg
          chmod +x ./tauri/ffmpeg/ffmpeg
          ./tauri/ffmpeg/ffmpeg -version
          curl -L -o ffprobe.zip "https://evermeet.cx/ffmpeg/getrelease/ffprobe/zip"
          unzip ffprobe.zip -d ./tauri/ffmpeg
          chmod +x ./tauri/ffmpeg/ffprobe
          ./tauri/ffmpeg/ffprobe -version

      - name: download ffmpeg and ffprobe (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install 7zip -y
          mkdir ./tauri/ffmpeg
          curl -L -o ffmpeg.7z "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z"
          7z x ffmpeg.7z -o "./tauri/ffmpeg"
          $ffmpegDir = Get-ChildItem ./tauri/ffmpeg -Directory -Name | Select-Object -First 1
          Move-Item "./tauri/ffmpeg/$ffmpegDir/bin/ffmpeg.exe" ./tauri/ffmpeg/ffmpeg.exe
          Move-Item "./tauri/ffmpeg/$ffmpegDir/bin/ffprobe.exe" ./tauri/ffmpeg/ffprobe.exe
          ./tauri/ffmpeg/ffmpeg.exe -version
          ./tauri/ffmpeg/ffprobe.exe -version

      - name: build
        run: |
          npm i pnpm -g
          pnpm i
          node --run build:ui
          pnpm tauri build -d
