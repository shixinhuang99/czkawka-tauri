name: release

permissions:
  contents: write

on:
  push:
    tags:
      - "[0-9]+.*"

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  release:
    runs-on: ${{ matrix.os }}
    name: release (${{ matrix.os }})

    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.os == 'macos-latest' && 'x86_64-apple-darwin' || '' }}

      - name: download ffmpeg and ffprobe
        if: matrix.os == 'macos-latest'
        run: |
          mkdir ./tauri/ffmpeg
          curl -L -o ffmpeg.zip "https://evermeet.cx/ffmpeg/getrelease/zip"
          unzip ffmpeg.zip -d ./tauri/ffmpeg
          chmod +x ./tauri/ffmpeg/ffmpeg
          ./tauri/ffmpeg/ffmpeg -version
          curl -L -o ffprobe.zip "https://evermeet.cx/ffmpeg/getrelease/ffprobe/zip"
          unzip ffprobe.zip -d ./tauri/ffmpeg
          chmod +x ./tauri/ffmpeg/ffprobe
          ./tauri/ffmpeg/ffprobe -version

      - name: macos bundles
        if: matrix.os == 'macos-latest'
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          npm i pnpm -g
          pnpm i
          node --run build:ui
          node --run build:tauri:ffmpeg
          mkdir ./target/ffmpeg-dmg
          mv ./target/universal-apple-darwin/release/bundle/dmg/CzkawkaTauri_${GITHUB_REF_NAME}_universal.dmg ./target/ffmpeg-dmg/CzkawkaTauri_${GITHUB_REF_NAME}_universal_ffmpeg.dmg
          node --run build:tauri

      - uses: softprops/action-gh-release@v2
        if: matrix.os == 'macos-latest'
        with:
          draft: true
          files: |
            ./target/universal-apple-darwin/release/bundle/dmg/*.dmg
            ./target/ffmpeg-dmg/*.dmg

      - name: windows bundles
        if: matrix.os == 'windows-latest'
        run: |
          npm i pnpm -g
          pnpm i
          node --run build:ui
          node --run build:tauri:win

      - uses: softprops/action-gh-release@v2
        if: matrix.os == 'windows-latest'
        with:
          draft: true
          files: |
            ./target/release/bundle/nsis/*.exe
